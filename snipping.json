{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"node-Print-to-console": {
		"prefix": "log",
		"body": [
			"console.log(``);"
		],
		"description": "Log output to console"
	},
	"node-this-is-log-from-marvel":{
		"prefix": "Log",
		"body": ["Log.write(`$1`);"],
		"description": "this would be a logger helper from marvel"
	},
	"node-rabbitmq":{
		"prefix": "node-rabbitmq",
		"body": [
			"const amqp = require('amqplib/callback_api');",
			"const queueName = '${1:queueName}';",
			"amqp.connect('amqp://${2:localhost}', function(${3:error}, connection) {",
			"   if (${3:error}) throw ${3:error};",
			"   connection.createConfirmChannel(function(${4:error}, channel) {",
			"       if (${4:error}) throw ${4:error};",
			"       const msg = 'Hello World!';",
			"       channel.assertQueue(queueName, {durable: ${4:true}});",
			"       channel.sendToQueue(queueName, Buffer.from(msg));",
			"       console.log(msg);",
			"   });",
			"});"
		],
		"description": "this is rabbit mq helper"
	}
}